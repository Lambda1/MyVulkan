原文: https://vulkan-tutorial.com

About
1.
VulkanはKhronosグループ(OpenGLの開発)が開発したローレベルAPIであり, 最新のグラフィックカードの抽象化を提供している.
Vulkanのインターフェースを使用するとアプリケーションの振る舞いを正確に記述でき, OpenGLやDirect3Dと比較してパフォーマンスの向上が見込める.
Direct3D12やMetalと比較して, クロスプラットフォーム開発に特化している(Win,Linux,Android).
2.
ただし, パフォーマンスの向上と引き換えに非常に詳細なAPIを使用する必要がある.
特に, フレームバッファ作成やオブジェクトのメモリ管理などのフルスクラッチが必須であり, 動作の担保にはアプリケーションごとに最適化が必要.
3.
つまり, Vulkanは万人向けではないため, 高度なCGや仕事で使うプログラマーを対象としている.
CGよりもゲーム開発がしたいなら, Vulkanよりも(すぐに廃止されることはないので)Direct3DやOpenGLを勉強するべきである.
また, UEやUnityなどのエンジンは内部でVulkanを使用しているのでオススメ.
4.
チュートリアルの条件
  1. Vulkan対応のグラフィックカードとドライバー
  2. C++経験(Resource Acquisition Is Initialization, 初期化リスト)
  3. C++17サポートのコンパイラ
  4. 3DCGの経験
5.
このチュートリアルでは, OpenGLやDirect3Dの知識は必要ないが, 3DCGの基本は知っていることが前提. (例えば, 透視投影変換などの数学知識)
6.
CよりもC++がオススメ(線形代数関係のライブラリを自作する必要がないため)
Rust用のチュートリアルも用意している.
7.
他のプログラミング言語を使用している人のためにC APIを使用する.
ただし, C++を使用するときは, 汚いコーディング作業を抽象化し, 特定のクラスエラー防止に役立つVulkan-Hppをバインディングすることを進める.

E-book
PDF版もあるよ


